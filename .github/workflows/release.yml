name: 📦 Build SerenityJS Custom

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  version:
    name: 🚀 Changeset Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.read_version.outputs.version }}
      created_release_commit: ${{ steps.changesets.outputs.hasChangesets == 'false' && steps.changesets.outputs.committed == 'true' }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: 📦 Install Dependencies
        run: yarn install

      - name: 🏗️ Build
        run: yarn build

      - name: 📦 Create Release or Version PR
        id: changesets
        uses: changesets/action@v1
        with:
          version: yarn run version
          setupGitUser: true
          commit: |
            chore(release): version packages

            Automated commit from `release` workflow.
          title: "chore(release): release packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔖 Read version
        if: steps.changesets.outputs.hasChangesets == 'false' && steps.changesets.outputs.committed == 'true'
        id: read_version
        run: |
          VERSION=$(node -p "require('./packages/core/package.json').version")
          echo "version=v$VERSION" >> "$GITHUB_OUTPUT"

  build-binaries:
    name: 🛠️ Build Release Binaries
    needs: version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 🔧 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: 🔧 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📦 Install Dependencies
        run: yarn

      - name: 🔧 Build
        run: yarn build

      - name: 🏗️ Bundle SerenityJS (Beta)
        run: yarn bundle

      - name: 🔧 Make Linux Binary Executable
        if: runner.os == 'Linux'
        run: chmod +x dist/*

      - name: 📦 Package Linux Build as Tarball
        if: runner.os == 'Linux'
        run: tar -czf serenityjs-linux.tar.gz -C dist .

      - name: 📦 Package Artifact
        id: package
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            FILE_NAME="serenityjs-linux.tar.gz"
            tar -czf "$FILE_NAME" -C dist .
          else
            OS_NAME=""
            if [[ "${{ runner.os }}" == "macOS" ]]; then
              OS_NAME="macos"
            elif [[ "${{ runner.os }}" == "Windows" ]]; then
              OS_NAME="windows"
            fi
            FILE_NAME="serenityjs-${OS_NAME}.zip"
            (cd dist && zip -r "../$FILE_NAME" .)
          fi
          echo "file_name=${FILE_NAME}" >> "$GITHUB_OUTPUT"

      - name: 📤 Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-asset-${{ matrix.os }}
          path: ${{ steps.package.outputs.file_name }}
          if-no-files-found: error
          compression-level: 6